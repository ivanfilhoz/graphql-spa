/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: {
    'Boolean': unknown;
    'CacheControlScope': { name: 'CacheControlScope'; enumValues: 'PUBLIC' | 'PRIVATE'; };
    'Date': unknown;
    'DateTime': unknown;
    'Float': unknown;
    'ForgotPassword': { kind: 'OBJECT'; name: 'ForgotPassword'; fields: { 'ok': { name: 'ok'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'ID': unknown;
    'InputID': { kind: 'INPUT_OBJECT'; name: 'InputID'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'Int': unknown;
    'JSON': unknown;
    'Long': unknown;
    'Morph': { kind: 'UNION'; name: 'Morph'; fields: {}; possibleTypes: 'ForgotPassword' | 'UploadFile' | 'UsersPermissionsLoginPayload' | 'UsersPermissionsMe' | 'UsersPermissionsMeRole' | 'UsersPermissionsPermission' | 'UsersPermissionsRole' | 'UsersPermissionsUser' | 'createUserPayload' | 'updateUserPayload'; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'changePassword': { name: 'changePassword'; type: { kind: 'OBJECT'; name: 'UsersPermissionsLoginPayload'; ofType: null; } }; 'emailConfirmation': { name: 'emailConfirmation'; type: { kind: 'OBJECT'; name: 'UsersPermissionsLoginPayload'; ofType: null; } }; 'forgotPassword': { name: 'forgotPassword'; type: { kind: 'OBJECT'; name: 'ForgotPassword'; ofType: null; } }; 'login': { name: 'login'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UsersPermissionsLoginPayload'; ofType: null; }; } }; 'multipleUpload': { name: 'multipleUpload'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UploadFile'; ofType: null; }; }; } }; 'register': { name: 'register'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UsersPermissionsLoginPayload'; ofType: null; }; } }; 'updateUser': { name: 'updateUser'; type: { kind: 'OBJECT'; name: 'updateUserPayload'; ofType: null; } }; 'upload': { name: 'upload'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UploadFile'; ofType: null; }; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'me': { name: 'me'; type: { kind: 'OBJECT'; name: 'UsersPermissionsMe'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UsersPermissionsUser'; ofType: null; } }; }; };
    'RoleInput': { kind: 'INPUT_OBJECT'; name: 'RoleInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'users'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'String': unknown;
    'Time': unknown;
    'Upload': unknown;
    'UploadFile': { kind: 'OBJECT'; name: 'UploadFile'; fields: { 'alternativeText': { name: 'alternativeText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'caption': { name: 'caption'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'created_at': { name: 'created_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'ext': { name: 'ext'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'formats': { name: 'formats'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'hash': { name: 'hash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'height': { name: 'height'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mime': { name: 'mime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'previewUrl': { name: 'previewUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provider': { name: 'provider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'provider_metadata': { name: 'provider_metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'related': { name: 'related'; type: { kind: 'LIST'; name: never; ofType: { kind: 'UNION'; name: 'Morph'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'updated_at': { name: 'updated_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'width': { name: 'width'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'UserInput': { kind: 'INPUT_OBJECT'; name: 'UserInput'; isOneOf: false; inputFields: [{ name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'provider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'resetPasswordToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'confirmed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'blocked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'role'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UsersPermissionsLoginInput': { kind: 'INPUT_OBJECT'; name: 'UsersPermissionsLoginInput'; isOneOf: false; inputFields: [{ name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'password'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'provider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"local\"" }]; };
    'UsersPermissionsLoginPayload': { kind: 'OBJECT'; name: 'UsersPermissionsLoginPayload'; fields: { 'jwt': { name: 'jwt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UsersPermissionsMe'; ofType: null; }; } }; }; };
    'UsersPermissionsMe': { kind: 'OBJECT'; name: 'UsersPermissionsMe'; fields: { 'blocked': { name: 'blocked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'confirmed': { name: 'confirmed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'role': { name: 'role'; type: { kind: 'OBJECT'; name: 'UsersPermissionsMeRole'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UsersPermissionsMeRole': { kind: 'OBJECT'; name: 'UsersPermissionsMeRole'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UsersPermissionsPermission': { kind: 'OBJECT'; name: 'UsersPermissionsPermission'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'controller': { name: 'controller'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'policy': { name: 'policy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'OBJECT'; name: 'UsersPermissionsRole'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UsersPermissionsRole': { kind: 'OBJECT'; name: 'UsersPermissionsRole'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UsersPermissionsPermission'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'users': { name: 'users'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UsersPermissionsUser'; ofType: null; }; } }; }; };
    'UsersPermissionsUser': { kind: 'OBJECT'; name: 'UsersPermissionsUser'; fields: { 'blocked': { name: 'blocked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'confirmed': { name: 'confirmed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'created_at': { name: 'created_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provider': { name: 'provider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'OBJECT'; name: 'UsersPermissionsRole'; ofType: null; } }; 'updated_at': { name: 'updated_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'createUserInput': { kind: 'INPUT_OBJECT'; name: 'createUserInput'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'INPUT_OBJECT'; name: 'UserInput'; ofType: null; }; defaultValue: null }]; };
    'createUserPayload': { kind: 'OBJECT'; name: 'createUserPayload'; fields: { 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UsersPermissionsUser'; ofType: null; } }; }; };
    'editRoleInput': { kind: 'INPUT_OBJECT'; name: 'editRoleInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'users'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'editUserInput': { kind: 'INPUT_OBJECT'; name: 'editUserInput'; isOneOf: false; inputFields: [{ name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'provider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'resetPasswordToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'confirmed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'blocked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'role'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'updateUserInput': { kind: 'INPUT_OBJECT'; name: 'updateUserInput'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'InputID'; ofType: null; }; defaultValue: null }, { name: 'data'; type: { kind: 'INPUT_OBJECT'; name: 'editUserInput'; ofType: null; }; defaultValue: null }]; };
    'updateUserPayload': { kind: 'OBJECT'; name: 'updateUserPayload'; fields: { 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UsersPermissionsUser'; ofType: null; } }; }; };
  };
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}